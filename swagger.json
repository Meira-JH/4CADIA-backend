{
    "openapi": "3.0.1",
    "info": {
        "title": "4CADIA Swagger",
        "description": "This was created as part of the 4CADIA Factory developer's selection.",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "externalDocs": {
        "description": "Find out more about 4CADDIA",
        "url": "https://4cadia.com/"
    },
    "servers": [
        {
            "url": "http://localhost:3030/"
        }
    ],
    "tags": [
        {
            "name": "Banking",
            "description": "Some simple banking operations for an Open Banking blockchain system simulation"
        },
        {
            "name": "User",
            "description": "User operations"
        }
    ],
    "paths": {
        "/user/signup": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Creates new user",
                "description": "Using this endingpoint you can create a new user. Be aware that CPF has to be unique, therefore you can't create another user if its CPF has already been used.",
                "operationId": "createUser",
                "requestBody": {
                    "description": "The user object necessary for the operation",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad request",
                        "content": {}
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Logs user in",
                "description": "This login will return both Access Token and Refresh Token for a more complete implementation of your app",
                "operationId": "loginUser",
                "requestBody": {
                    "description": "The user object necessary for the operation",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginEntry"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad request",
                        "content": {}
                    }
                }
            }
        },
        "/banking/createAccount": {
            "post": {
                "tags": [
                    "Banking"
                ],
                "summary": "Creates a new account",
                "description": "The account will be created based on the Access Token provided by both Login and Refresh Token endingpoints.",
                "operationId": "createAccount",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad request",
                        "content": {}
                    }
                }
            }
        },
        "/banking/addBalance/": {
            "post": {
                "tags": [
                    "Banking"
                ],
                "summary": "Creates a new account",
                "description": "The account will be created based on the Access Token provided by both Login and Refresh Token endingpoints.",
                "operationId": "createAccount",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The object necessary for the operation",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BankTransaction"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad request",
                        "content": {}
                    }
                }
            }
        },
        "/banking/getAccounts": {
            "get": {
                "tags": [
                    "Banking"
                ],
                "summary": "Gets all accounts of a giving user",
                "description": "This endingpoint returns the account information provided by the User ID retrieved by its Access Token.",
                "operationId": "getAccount",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad request",
                        "content": {}
                    }
                }
            }
        },
        "/banking/getBalance/{accountId}": {
            "get": {
                "tags": [
                    "Banking"
                ],
                "summary": "Gets account balance",
                "description": "This endingpoint returns the balance of a giving account, once permissions are verified through access token.",
                "operationId": "getBalance",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad request",
                        "content": {}
                    }
                }
            }
        },
        "/banking/getStatement/{accountId}": {
            "get": {
                "tags": [
                    "Banking"
                ],
                "summary": "Gets account statement",
                "description": "This endingpoint returns the overrall transactions and balance of a giving account, once permissions are verified through access token.",
                "operationId": "getStatement",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad request",
                        "content": {}
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "cpf": {
                        "type": "string"
                    },
                    "birthdate": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    }
                }
            },
            "BankTransaction": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string"
                    },
                    "account_id": {
                        "type": "string"
                    },
                    "value": {
                        "type": "integer"
                    },
                    "date": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "LoginEntry": {
                "type": "object",
                "properties": {
                    "cpf": {
                        "type": "integer"
                    },
                    "password": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    }
                }
            }
        }
    }
}